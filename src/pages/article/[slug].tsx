import { AxiosResponse } from 'axios';
import React from 'react';
import qs from 'qs';
import Image from 'next/image';
import { formatDate, serializeMarkdown } from '../../utils';
import { fetchArticleBySlug } from '../../http';
import { IArticle, ICollectionResponse } from '../../types';
import { GetServerSideProps } from 'next';
import Head from 'next/head';
import { MDXRemote, MDXRemoteSerializeResult } from 'next-mdx-remote';
import socialMediaList from '@/data/socialMedia';

interface IPropType {
  article: IArticle;
  notFound?: boolean;
}

const slug = ({ article, notFound = false }: IPropType) => {
  return (
    <>
      <Head>
        <title>{article.attributes.title}</title>
        <meta
          name="description"
          content="Generated by create next app"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="my-12 grid lg:grid-cols-3 gap-12 single-article">
        <div className="col-span-2">
          <h1 className="text-3xl font-bold py-2">
            {article.attributes.title}
          </h1>
          <div className="flex items-center my-4">
            <div className="rounded-lg overflow-hidden flex items-center justify-center mr-2">
              <Image
                src={`https://robohash.org/hicveldicta.png?size=50x50&set=set1`}
                height={40}
                width={40}
                alt=''
              />
            </div>
            <span className="text-sm font-bold text-gray-600">
              Rajnikant
              on &nbsp;
              <span className="text-gray-400">
                {formatDate(article.attributes.createdAt)}
              </span>
            </span>
          </div>
          <div className="text-lg text-gray-600 leading-8">
            <Image
              className="w-full my-12 mb-6"
              // src={article.attributes.cover.data.attributes.url}
              width={400}
              height={300}
              // src={``}
              src={`https://cdn.jsdelivr.net/gh/jashezan/public-resources@main/Images/Web-Projects/optimized-images/flex-panel-720x.jpg`}
              alt={article.attributes.title}
            />
            <MDXRemote
              {...(article.attributes
                .body as MDXRemoteSerializeResult)}
            />
          </div>
        </div>
        <div className="sticky top-0">
          <h2 className="font-bold text-gray-600 text-lg">
            Signup to our newsletter
          </h2>
          <p className="mt-4 text-gray-500">
            Get the latest article on all things data delivered
            straight to your inbox
          </p>
          <input
            className="border w-full p-2 pl-3 my-6 outline-primary"
            type="email"
            placeholder="Your work email"
          />
          <button className="border-2 border-primary rounded py-1 px-6 text-primary font-bold">
            Subscribe
          </button>
          <hr className="my-6 border-gray-100" />
          <span className="inline-flex sm:ml-auto sm:mt-0 mt-4 justify-center sm:justify-start">
            <span className="text-gray-500 mr-2">Share</span>
            {socialMediaList.map((profile, index) => {
              return (
                <a href={profile.profilelink} target='_blank' rel='noreferrer noopener' key={index} className='p-2'>
                  <Image src={profile.logolink} alt={profile.name} width={20} height={20} />
                </a>
              )
            })}
          </span>
          <hr className="my-6 border-gray-100" />
        </div>
      </div>
    </>
  );
};

export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  const queryString = qs.stringify({
    populate: ['cover', 'author.avatar'],
    filters: {
      slug: {
        $eq: query.slug,
      },
    },
  });

  const { data: articles }: AxiosResponse<ICollectionResponse<IArticle[]>> =
    await fetchArticleBySlug(queryString);
  if (articles.data.length === 0) {
    return {
      notFound: true,
    };
  }
  return {
    props: {
      article: await serializeMarkdown(articles.data[0]),
    },
  };
};

export default slug;